#+title: Can You Scale Nx?
#+date: November 8th, 2022
#+author: Benjamin Philip
* Description
The BEAM was created to solve a very specific problem: to implement highly
concurrent and scalable telecom infrastructure for Ericsson. The open
sourcing of Erlang and the creation of Elixir has made the BEAM's concurrency
features accessible to Modern Applications. However, the needs of Modern
Applications are more than that of Ericsson. The necessity for Artificial
Intelligence and Machine Learning has increased over the past few years.
Unfortunately, the BEAM was not built for AI's high computing demands, and
fares terribly compared to the likes of Python, C/C++, and the JVM.

Nx was created to bridge that gap. It brings multidimensional matrices (more
commonly known as tensors) to Elixir, which have been made performant with the
help of tested projects like Google's XLA and Facebook's LibTorch. Nx along
with the help of libraries like Axon and Evision makes Neural Networks,
Computer Vision and more, accessible with just pure Elixir.

Nevertheless, the NIF (native) nature of Nx presents a few questions:

  - Is it thread safe?
  - Can it manage a large number concurrent computations?
  - Can it manage large volumes of data?
  - Can it manage heavy computations?
  - Can you manage multiple instances?

and many more.

In this talk we will build a simple Web Service that recognises a variety of
different kinds of subjects like digits, letters, animals and objects in images.
We will address the afore mentioned questions and find ways to investigate them.
You will learn /how to/ and /what/ goes into scaling an app with Nx. In the end,
we'll answer if "Can *you* scale Nx?".

* Talk Objective(s)
This talk aims to:

  - Discuss the caveats and limitations of using Nx
  - Present solutions to the caveats and discuss why and when these solutions work
  - Explain Concurrency with Nx
  - Provide guidance on how to get started with using Nx in an app
* Target audience
This talk targets (in decreasing order):

  - Elixir Developers interested in using Nx in their applications
  - Elixir Developers curious about Nx and Machine Learning in Elixir
  - All Elixir Developers in general
* Level
Intermediate
* Which three words would best sum up your talk?
- Nx
- Scalability
- "Machine Learning"
* Question would you like to be ask during the Q&A
* Notes
- First Time Speaker
- Ideally Interactive
- Questions to be submitted later
* Speaker Biography
Benjamin is an Elixir and Functional Programming enthusiast. Though not a core
contributor, he frequently contributes to the Nx and Livebook projects with the
occasional contributions to Hexpm and Hex. Being a 16 year old highschooler, he
does not have any professional programming experience but he tries to contribute
to Opensource whenever time permits.

In his free time he likes to read Non Fiction and Fantasy, listen to 70s and
80s music (and additionally grumble about how nobody at school shares his
taste in music) and crack terrible jokes. Beware. He's bit of a Linux and
Emacs zealot.
